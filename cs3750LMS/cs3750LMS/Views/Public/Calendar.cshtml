@{
    ViewBag.Title = "Calendar";
    String _currentDate = DateTime.Now.ToString("yyyy-MM-dd");
    UserSession user = (UserSession)ViewData["Message"];
    Courses userCourses = (Courses)ViewData["userCourses"];
    ViewBag.userCourses = Newtonsoft.Json.JsonConvert.SerializeObject(userCourses);
    Assignments userAssignments = (Assignments)ViewData["UserAssignments"];
    ViewBag.userAssignments = Newtonsoft.Json.JsonConvert.SerializeObject(userAssignments);
}
<head>
    <link rel='stylesheet' href='~/css/fullcalenar.css' />
    <script src='~/js/fullcalendar.js'></script>
    <script>

        document.addEventListener('DOMContentLoaded', function () {

            var _userCourses = @Html.Raw(ViewBag.userCourses);
            var _userAssignments = @Html.Raw(ViewBag.userAssignments);
            let eventsArray = [];

            for (var i = 0; i < _userCourses.CourseList.length; i++) {
                let arrDaysOfWeek = [];
                let sDays = _userCourses.CourseList[i].MeetDays;

                for (let j = 0; j < 7; j++) {
                    if (sDays[j] == 'y') {
                        arrDaysOfWeek.push(j);
                    }
                }

                eventsArray.push(
                    {
                        groupId: _userCourses.CourseList[i].CourseID.toString(),        // Probably the Class name
                        title: _userCourses.CourseList[i].ClassTitle,      // Class Name
                        startRecur: '2021-06-01',
                        endRecur: '2021-08-31',
                        daysOfWeek: arrDaysOfWeek, // these recurrent events move separately
                        startTime: _userCourses.CourseList[i].StartTime,
                        endTime: _userCourses.CourseList[i].EndTime,
                        color: _userCourses.CourseList[i].Color
                    }
                );
            }

            // Add Assignments to the calendar
            if (_userAssignments.AssignmentList != null) {
                for (var i = 0; i < _userAssignments.AssignmentList.length; i++) {
                    eventsArray.push(
                        {
                            groupId: _userAssignments.AssignmentList[i].AssignmentID.toString() + "_" + _userAssignments.AssignmentList[i].CourseID.toString(),
                            title: _userAssignments.AssignmentList[i].Title,
                            start: new Date(Date.parse(_userAssignments.AssignmentList[i].DueDate))
                            , url: '/Student/SubmitAssignment/' + _userAssignments.AssignmentList[i].AssignmentID.toString()
                        }
                    );
                }
            }

            var calendarEl = document.getElementById('calendar');

            var calendar = new FullCalendar.Calendar(calendarEl, {
                initialDate: '@_currentDate',
                editable: true,
                selectable: true,
                businessHours: true,
                dayMaxEvents: true, // allow "more" link when too many events
                events: eventsArray
            });

            calendar.render();
        });

    </script>
</head>
<body>
    <div id='calendar' class="container bg-light p-4"></div>

</body>