@{
    ViewBag.Title = "Calendar";
    String _currentDate = DateTime.Now.ToString("yyyy-MM-dd");
    UserSession user = (UserSession)ViewData["Message"];
    Courses userCourses = (Courses)ViewData["userCourses"];
    ViewBag.userCourses = Newtonsoft.Json.JsonConvert.SerializeObject(userCourses);
    //List<String> CourseIDList = new List<String>();
    //List<String> ClassTitleList = new List<String>();
    //List<String> DaysOfWeekList = new List<String>();
    //List<String> startTimeList = new List<String>();
    //List<String> colorList = new List<String>();
    //int courseCount = userCourses.CourseList.Count;
    //for (int i = 0; i < courseCount; i++)
    //{
    //    CourseIDList.Add(userCourses.CourseList[i].CourseID.ToString());
    //    ClassTitleList.Add(userCourses.CourseList[i].ClassTitle);
    //    DaysOfWeekList.Add(userCourses.CourseList[i].MeetDays);
    //    startTimeList.Add(userCourses.CourseList[i].StartTime.ToString());
    //    startTimeList.Add(userCourses.CourseList[i].EndTime.ToString());
    //    startTimeList.Add(userCourses.CourseList[i].color);
    //}

    //ViewBag.CourseIDList = Newtonsoft.Json.JsonConvert.SerializeObject(CourseIDList);
    //ViewBag.ClassTitleList = Newtonsoft.Json.JsonConvert.SerializeObject(ClassTitleList);
    //ViewBag.DaysOfWeekList = Newtonsoft.Json.JsonConvert.SerializeObject(DaysOfWeekList);
    //ViewBag.startTimeList = Newtonsoft.Json.JsonConvert.SerializeObject(startTimeList);
    //ViewBag.colorList = Newtonsoft.Json.JsonConvert.SerializeObject(colorList);


}
@*
    Things to do:
        - Set events up to work with classes
        - Set up to do different colored tasks based on classes
        - Modify the colors to match our color scheme
            - Background should not be transparent
*@ 
<head>
    <link rel='stylesheet' href='~/css/fullcalenar.css' />
    <script src='~/js/fullcalendar.js'></script>
    <script>

        document.addEventListener('DOMContentLoaded', function () {

            var _userCourses = @Html.Raw(ViewBag.userCourses);
            console.log(_userCourses);
            let eventsArray = [];

            for (var i = 0; i < _userCourses.CourseList.length; i++) {
                let arrDaysOfWeek = [];
                let sDays = _userCourses.CourseList[i].MeetDays;

                for (let j = 0; j < 7; j++) {
                    if (sDays[j] == 'y') {
                        arrDaysOfWeek.push(j);
                    }
                }

                eventsArray.push(
                    {
                        groupId: _userCourses.CourseList[i].CourseID.toString(),        // Probably the Class name
                        title: _userCourses.CourseList[i].ClassTitle,      // Class Name
                        startRecur: '2021-06-01',
                        endRecur: '2021-08-31',
                        daysOfWeek: arrDaysOfWeek, // these recurrent events move separately
                        startTime: _userCourses.CourseList[i].startTime,
                        endTime: _userCourses.CourseList[i].endTime,
                        color: _userCourses.CourseList[i].color
                    }
                );
            }


            var calendarEl = document.getElementById('calendar');

            var calendar = new FullCalendar.Calendar(calendarEl, {
                initialDate: '@_currentDate',
                editable: true,
                selectable: true,
                businessHours: true,
                dayMaxEvents: true, // allow "more" link when too many events
                events: eventsArray
            });

            calendar.render();
        });

    </script>
</head>
<body>

    <div id='calendar'></div>

</body>